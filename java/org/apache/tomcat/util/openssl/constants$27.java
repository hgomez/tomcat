/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;

final class constants$27 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$27() {
    }

    static final FunctionDescriptor const$0 = FunctionDescriptor.of(JAVA_INT);
    static final MethodHandle const$1 =
            RuntimeHelper.downcallHandle("SSL_get_ex_data_X509_STORE_CTX_idx", constants$27.const$0);
    static final FunctionDescriptor const$2 =
            FunctionDescriptor.of(RuntimeHelper.POINTER, RuntimeHelper.POINTER, JAVA_INT, JAVA_INT);
    static final MethodHandle const$3 =
            RuntimeHelper.upcallHandle(SSL_CTX_set_tmp_dh_callback$dh.class, "apply", constants$27.const$2);
    static final MethodHandle const$4 = RuntimeHelper.downcallHandle(constants$27.const$2);
    static final MethodHandle const$5 =
            RuntimeHelper.downcallHandle("SSL_CTX_set_tmp_dh_callback", constants$21.const$1);
}

